<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="${package}.${module}.mappers.${className}Mapper">

	<resultMap id="BaseResultMap" type="${package}.${module}.entities.${className}Entity">
<% for(column in columns!) { %>
    <% if(column.columnName == pk.columnName) { %>
    	<id column="${column.columnName}" jdbcType="${column.dataTypeUuper}" property="${column.fieldName}" />
    <% }else{ %>
		<result column="${column.columnName}" jdbcType="${column.dataTypeUuper}" property="${column.fieldName}" />
	<%}%>
<% } %>
    </resultMap>

    <resultMap id="BaseDtoResultMap" type="${package}.${module}.dto.${className}Dto" extends="BaseResultMap">
    </resultMap>

    <sql id="Base_Column_List">
        <% for(column in columns!) { %>
        t.${column.columnName}<% if(!columnLP.last) { %>, <% } %>
        <% } %>
    </sql>

    <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.String">
        select
        <include refid="Base_Column_List"/>
        from ${tableName} t
        where ${pk.columnName} = #{${pk.fieldName}}
    </select>

    <delete id="deleteByPrimaryKey" parameterType="java.lang.String">
        delete from ${tableName}
        where ${pk.columnName} = #{${pk.fieldName}}
    </delete>

    <insert id="add" parameterType="${package}.${module}.entities.${className}Entity">
        INSERT INTO ${tableName} (
<% for(column in columns!) { %>
<% if(column.columnName != pk.columnName || pk.extra != 'auto_increment') { %>
            `${column.columnName}`<% if(!columnLP.last) { %>, <% } %>
<% } %>
<% } %>
        )VALUES (
<% for(column in columns!) { %>
<% if(column.columnName != pk.columnName || pk.extra != 'auto_increment') { %>
            #{${column.fieldName}}<% if(!columnLP.last) { %>, <% } %>
<% } %>
<% } %>
        )
    </insert>

    <insert id="insertSelective" parameterType="${package}.${module}.entities.${className}Entity">
        INSERT INTO ${tableName}
        <trim prefix="(" suffix=")" suffixOverrides=",">
        <% for(column in columns!) { %>
            <if test="${column.fieldName} != null">
                ${column.columnName},
            </if>
        <%}%>
        </trim>
        <trim prefix="VALUES (" suffix=")" suffixOverrides=",">
        <% for(column in columns!) { %>
            <if test="${column.fieldName} != null">
                #{${column.fieldName},jdbcType=${column.dataTypeUuper}},
            </if>
        <%}%>
        </trim>
    </insert>

    <insert id="batchSave" parameterType="java.util.List">
        INSERT INTO ${tableName} (
  <% for(column in columns!) { %>
            `${column.columnName}`<% if(!columnLP.last) { %>, <% } %>
  <% } %>
       )VALUES
        <foreach collection="list" item="item" separator=",">
            (
  <% for(column in columns!) { %>
            #{item.${column.fieldName}}<% if(!columnLP.last) { %>, <% } %>
  <% } %>
            )
        </foreach>
    </insert>

    <update id="edit" parameterType="${package}.${module}.entities.${className}Entity">
        UPDATE ${tableName}
        <set>
<% for(column in columns!) { %>
<% if(column.columnName != pk.columnName) { %>
            ${column.columnName} = #{${column.fieldName},jdbcType=${column.dataTypeUuper}}<% if(!columnLP.last) { %>, <% } %>
<% } %>
<% } %>
        </set>
        WHERE
            ${pk.columnName} = #{${pk.fieldName}}
    </update>

    <update id="updateSelective" parameterType="${package}.${module}.entities.${className}Entity">
        UPDATE ${tableName}
        <set>
    <% for(column in columns!) { %>
    <% if(column.columnName != pk.columnName) { %>
            <if test="${column.fieldName} != null">${column.columnName} = #{${column.fieldName}}<% if(!columnLP.last) { %>, <% } %></if>
    <% } %>
    <% } %>
        </set>
        WHERE
        ${pk.columnName} = #{${pk.fieldName}}
    </update>

    <delete id="delete" parameterType="${package}.${module}.entities.${className}Entity">
        DELETE FROM ${tableName}
        WHERE
        <where>
    <% for(column in columns!) { %>
        <% if(column.columnName != pk.columnName) { %>
            <if test="${column.fieldName} != null">AND ${column.columnName} = #{${column.fieldName}}</if>
        <% } %>
    <% } %>
        </where>
    </delete>

    <delete id="remove" parameterType="java.lang.String">
        DELETE FROM ${tableName} WHERE ${pk.columnName} = #{${pk.fieldName}}
    </delete>

    <delete id="batchRemove">
        DELETE
        FROM
            ${tableName}
        WHERE
            ${pk.columnName} IN
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

    <select id="getObjectById" resultMap="BaseResultMap">
        SELECT
        <include refid="Base_Column_List" />
        FROM
            ${tableName} t
        WHERE
            ${pk.columnName} = #{${pk.fieldName}}
    </select>

	<select id="queryPage" parameterType="${package}.${module}.dto.${className}Dto" resultMap="BaseDtoResultMap">
		SELECT
<% for(column in columns!) { %>
			`${column.columnName}`<% if(!columnLP.last) { %>, <% } %>
<% } %>
		FROM
			${tableName} t
		<where>
    <% for(column in columns!) { %>
        <% if(column.columnName != pk.columnName) { %>
            <if test="${column.fieldName} != null">AND ${column.columnName} = #{${column.fieldName}}</if>
        <% } %>
    <% } %>
        </where>
	</select>

    <select id="list" parameterType="${package}.${module}.entities.${className}Entity" resultMap="BaseResultMap">
        SELECT
            <include refid="Base_Column_List" />
        FROM
            ${tableName} t
        <where>
    <% for(column in columns!) { %>
        <% if(column.columnName != pk.columnName) { %>
            <if test="${column.fieldName} != null">AND ${column.columnName} = #{${column.fieldName}}</if>
        <% } %>
    <% } %>
        </where>
    </select>

    <select id="count" parameterType="${package}.${module}.entities.${className}Entity" resultType="integer">
        SELECT count(1) c FROM ${tableName} t
        <where>
    <% for(column in columns!) { %>
            <if test="${column.fieldName} != null">AND ${column.columnName} = #{${column.fieldName}}</if>
    <% } %>
        </where>
    </select>

</mapper>